{"version":3,"sources":["webpack:///webpack/bootstrap f82dff073984e4cec968","webpack:///./lib/index.js"],"names":["parser","generate","string","regex","getType","obj","Object","prototype","toString","call","slice","count","arr","item","start","end","c","i","l","length","Math","min","lineInfoAt","stream","index","Error","cs","split","line","lastNl","reverse","col","Result","status","value","furthest","expected","other","ParseError","s","e","Parser","func","str","res","lshift","eof","parsePartial","t","boundFun","nextParser","aggregate","mapFun","bind","success","seq","map","r","times","Infinity","max","values","push","n","many","desc","f","fail","or","self","lineInfo","body","right","alt","then","skip","parsers","_parser","fun","g","next","done","returnVal","name","_","val","failure","sl","stringParser","exp","RegExp","regexParser","_stream","match","whitespace","left","plus","rshift"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f82dff073984e4cec968","function getType(obj) {\n  return Object.prototype.toString.call(obj).slice(8, -1)\n}\n\nfunction count(arr, item, start, end) {\n  let c = 0\n  for (var i = 0, l = arr.length; i < Math.min(l, end); i++) {\n    if (arr[i] === item) {\n      c++\n    }\n  }\n  return c\n}\n\nfunction lineInfoAt(stream, index) {\n  if (index > stream.length) {\n    throw Error('invalid index')\n  }\n  let cs = stream.split('')\n  let line = count(cs, '\\n', index)\n  let lastNl = count(cs.reverse(), '\\n', index) || -1\n  let col = index - (lastNl + 1)\n  return [line, col]\n}\n\nclass Result {\n  constructor(status, index, value, furthest, expected) {\n    this.status = status\n    this.index = index\n    this.value = value\n    this.furthest = furthest\n    this.expected = expected\n  }\n\n  static success(index, value) {\n    return new Result(true, index, value, -1, void 0)\n  }\n\n  static failure(index, expected) {\n    return new Result(false, -1, void 0, index, expected)\n  }\n\n  aggregate(other) {\n    if (!other) {\n      return this\n    }\n    if (this.furthest >= other.furthest) {\n      return this\n    }\n    return new Result(\n      this.status, this.index, this.value, other.furthest, other.expected\n    )\n  }\n}\n\nclass ParseError extends Error {\n  constructor(expected, stream, index) {\n    let s = ''\n    try {\n      let [line, col] = lineInfoAt(stream, index)\n      s = `${line}:${col}`\n    } catch(e) {\n      s = 'error'\n    }\n    super(`Expected ${expected} at ${s}`)\n    this.expected = expected\n    this.stream = stream\n    this.index = index\n  }\n}\n\nclass Parser {\n  constructor(func) {\n    this.func = func\n  }\n\n  call(stream, index) {\n    return this.func(stream, index)\n  }\n\n  parse(str) {\n    const res = (this.lshift(eof)).parsePartial(str)\n    return res[0]\n  }\n\n  parsePartial(str) {\n    const t = getType(str)\n    if (t !== 'String') {\n      throw Error(`Only parse string, ${t} found!`)\n    }\n    const res = this.call(str, 0)\n    if (res.status) {\n      return [res.value, str.slice(res.index)]\n    }\n    throw new ParseError(res.expected, str, res.furthest)\n  }\n\n  bind(boundFun) {\n    return parser((stream, index) => {\n      const res = this.call(stream, index)\n      if (res.status) {\n        const nextParser = boundFun(res.value)\n        return nextParser.call(stream, res.index).aggregate(res)\n      }\n      return res\n    })\n  }\n\n  map(mapFun) {\n    return this.bind(res => success(mapFun(res)))\n  }\n\n  then(other) {\n    return seq(this, other).map(r => r[1])\n  }\n\n  skip(other) {\n    return seq(this, other).map(r => r[0])\n  }\n\n  result(res) {\n    return this >> success(res)\n  }\n\n  many() {\n    return this.times(0, Infinity)\n  }\n\n  times(min, max) {\n    max = max || min\n\n    return parser((stream, index) => {\n      let values = []\n      let times = 0\n      let res\n\n      while (times < max) {\n        res = this.call(stream, index).aggregate(res)\n        if (res.status) {\n          values.push(res.value)\n          index = res.index\n          times += 1\n        } else if (times >= min) {\n          break\n        }\n        return res\n      }\n\n      return Result.success(index, values).aggregate(res)\n    })\n  }\n\n  atMost(n) {\n    return this.times(0, n)\n  }\n\n  atLeast(n) {\n    return this.times(n) + this.many()\n  }\n\n  desc(desc) {\n    const f = fail(desc)\n    return this.or(f)\n  }\n\n  mark() {\n    const self = this\n    return generate(function*() {\n      const start = yield lineInfo\n      const body = yield self\n      const end = yield lineInfo\n      return [start, body, end]\n    })\n  }\n\n  plus(right) {\n    return seq(this, right).map(res => res[0] + res[1])\n  }\n\n  multiply(right) {\n    return this.times(right)\n  }\n\n  or(right) {\n    return alt(this, right)\n  }\n\n  rshift(right) {\n    return this.then(right)\n  }\n\n  lshift(right) {\n    return this.skip(right)\n  }\n}\n\nfunction alt(...parsers) {\n  if (!parsers) {\n    return fail('<Empty alt>')\n  }\n\n  return parser((stream, index) => {\n    let res\n    for (var i = 0, l = parsers.length; i < l; i++) {\n      var _parser = parsers[i]\n      res = _parser.call(stream, index).aggregate(res)\n      if (res.status) {\n        return res\n      }\n    }\n    return res\n  })\n}\n\nfunction seq(...parsers) {\n  if (!parsers) {\n    return success([])\n  }\n\n  return parser((stream, index) => {\n    let res\n    let values = []\n\n    for (var i = 0, l = parsers.length; i < l; i++) {\n      var _parser = parsers[i]\n      res = _parser.call(stream, index).aggregate(res)\n      if (!res.status) {\n        return res\n      }\n      index = res.index\n      values.push(res.value)\n    }\n    return Result.success(index, values).aggregate(res)\n  })\n}\n\nexport function parser(fun) {\n  return new Parser(fun)\n}\n\nexport function generate(fun) {\n  if (getType(fun) === 'String') {\n    return f => generate(f).desc(fun)\n  }\n\n  return parser((stream, index) => {\n    const g = fun()\n\n    let res\n    let value\n    let nextParser\n\n    while (!(nextParser = g.next(value)).done) {\n      res = nextParser.value.call(stream, index).aggregate(res)\n      if (!res.status) {\n        return res\n      }\n      value = res.value\n      index = res.index\n    }\n\n    const returnVal = nextParser.value\n    if (returnVal instanceof Parser) {\n      return returnVal(stream, index).aggregate(res)\n    }\n\n    return Result.success(index, returnVal).aggregate(res)\n\n  }).desc(fun.name)\n}\n\nexport const index = new Parser((_, index) => Result.success(index, index))\nexport const lineInfo = new Parser((stream, index) => Result.success(index, lineInfoAt(stream, index)))\n\nfunction success(val) {\n  return new Parser((_, index) => Result.success(index, val))\n}\n\nfunction fail(expected) {\n  return new Parser((_, index) => Result.failure(index, expected))\n}\n\nexport function string(s) {\n  const sl = s.length\n\n  const stringParser = parser((stream, index) => {\n    if (stream.slice(index, index + sl) === s) {\n      return Result.success(index + sl, s)\n    } else {\n      return Result.failure(index, s)\n    }\n  })\n\n  stringParser.name = `stringParser<${s}>`\n\n  return stringParser\n}\n\nexport function regex(exp) {\n  if (getType(exp) === 'String') {\n    exp = new RegExp(exp)\n  }\n\n  const regexParser = parser((stream, index) => {\n    const _stream = stream.slice(index)\n    const match = _stream.match(exp)\n    if (match) {\n      index = match.index + match[0].length + index\n      return Result.success(index, match[0])\n    }\n    return Result.failure(index, exp.toString())\n  })\n\n  regexParser.name = `regexParser<${exp.toString()}>`\n\n  return regexParser\n}\n\nexport const whitespace = regex('\\s+')\n\nexport const eof = parser((stream, index) => {\n  if (index >= stream.length) {\n    return Result.success(index, void 0)\n  }\n  return Result.failure(index, 'EOF')\n});\n\nexport const or = (left, right) => {\n  if (left instanceof Parser) {\n    return left.or(right)\n  }\n  return left | right\n}\n\nexport const plus = (left, right) => {\n  if (left instanceof Parser) {\n    return left.plus(right)\n  }\n  return left + right\n}\n\nexport const lshift = (left, right) => {\n  if (left instanceof Parser) {\n    return left.lshift(right)\n  }\n  return left << right\n}\n\nexport const rshift = (left, right) => {\n  if (left instanceof Parser) {\n    return left.rshift(right)\n  }\n  return left >> right\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js"],"sourceRoot":""}