{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 9e402f951f9da2d96d87","webpack:///./lib/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","getType","obj","toString","slice","isAlpha","s","test","toLowerCase","count","arr","item","start","end","i","l","length","Math","min","lineInfoAt","stream","index","Error","cs","split","line","lastNl","reverse","col","alt","_len","arguments","parsers","Array","_key","fail","parser","res","_parser","aggregate","status","seq","_len2","_key2","values","push","Result","success","fun","Parser","generate","f","desc","g","nextParser","next","done","returnVal","name","val","_","expected","failure","string","sl","stringParser","regex","exp","RegExp","regexParser","_stream","match","_index","defineProperty","_slicedToArray","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","err","isArray","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","furthest","this","other","ParseError","_Error","_lineInfoAt","_lineInfoAt2","e","_this","getPrototypeOf","func","str","lshift","eof","parsePartial","t","boundFun","_this2","mapFun","bind","map","r","rshift","times","Infinity","max","_this3","n","many","or","_callee","body","regeneratorRuntime","wrap","_context","prev","lineInfo","sent","abrupt","stop","right","then","skip","whitespace","letter","digit","isNaN","left","plus"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.parser = parser;\n\texports.generate = generate;\n\texports.string = string;\n\texports.regex = regex;\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction getType(obj) {\n\t  return Object.prototype.toString.call(obj).slice(8, -1);\n\t}\n\t\n\tfunction isAlpha(s) {\n\t  return !/[^a-z\\xDF-\\xFF]|^$/.test(s.toLowerCase());\n\t}\n\t\n\tfunction count(arr, item, start, end) {\n\t  var c = 0;\n\t  for (var i = 0, l = arr.length; i < Math.min(l, end); i++) {\n\t    if (arr[i] === item) {\n\t      c++;\n\t    }\n\t  }\n\t  return c;\n\t}\n\t\n\tfunction lineInfoAt(stream, index) {\n\t  if (index > stream.length) {\n\t    throw Error('invalid index');\n\t  }\n\t  var cs = stream.split('');\n\t  var line = count(cs, '\\n', index);\n\t  var lastNl = count(cs.reverse(), '\\n', index) || -1;\n\t  var col = index - (lastNl + 1);\n\t  return [line, col];\n\t}\n\t\n\tvar Result = function () {\n\t  function Result(status, index, value, furthest, expected) {\n\t    _classCallCheck(this, Result);\n\t\n\t    this.status = status;\n\t    this.index = index;\n\t    this.value = value;\n\t    this.furthest = furthest;\n\t    this.expected = expected;\n\t  }\n\t\n\t  _createClass(Result, [{\n\t    key: 'aggregate',\n\t    value: function aggregate(other) {\n\t      if (!other) {\n\t        return this;\n\t      }\n\t      if (this.furthest >= other.furthest) {\n\t        return this;\n\t      }\n\t      return new Result(this.status, this.index, this.value, other.furthest, other.expected);\n\t    }\n\t  }], [{\n\t    key: 'success',\n\t    value: function success(index, value) {\n\t      return new Result(true, index, value, -1, void 0);\n\t    }\n\t  }, {\n\t    key: 'failure',\n\t    value: function failure(index, expected) {\n\t      return new Result(false, -1, void 0, index, expected);\n\t    }\n\t  }]);\n\t\n\t  return Result;\n\t}();\n\t\n\tvar ParseError = function (_Error) {\n\t  _inherits(ParseError, _Error);\n\t\n\t  function ParseError(expected, stream, index) {\n\t    _classCallCheck(this, ParseError);\n\t\n\t    var s = '';\n\t    try {\n\t      var _lineInfoAt = lineInfoAt(stream, index),\n\t          _lineInfoAt2 = _slicedToArray(_lineInfoAt, 2),\n\t          line = _lineInfoAt2[0],\n\t          col = _lineInfoAt2[1];\n\t\n\t      s = line + ':' + col;\n\t    } catch (e) {\n\t      s = 'error';\n\t    }\n\t\n\t    var _this = _possibleConstructorReturn(this, (ParseError.__proto__ || Object.getPrototypeOf(ParseError)).call(this, 'Expected ' + expected + ' at ' + s));\n\t\n\t    _this.expected = expected;\n\t    _this.stream = stream;\n\t    _this.index = index;\n\t    return _this;\n\t  }\n\t\n\t  return ParseError;\n\t}(Error);\n\t\n\tvar Parser = function () {\n\t  function Parser(func) {\n\t    _classCallCheck(this, Parser);\n\t\n\t    this.func = func;\n\t  }\n\t\n\t  _createClass(Parser, [{\n\t    key: 'call',\n\t    value: function call(stream, index) {\n\t      return this.func(stream, index);\n\t    }\n\t  }, {\n\t    key: 'parse',\n\t    value: function parse(str) {\n\t      var res = this.lshift(eof).parsePartial(str);\n\t      return res[0];\n\t    }\n\t  }, {\n\t    key: 'parsePartial',\n\t    value: function parsePartial(str) {\n\t      var t = getType(str);\n\t      if (t !== 'String') {\n\t        throw Error('Only parse string, ' + t + ' found!');\n\t      }\n\t      var res = this.call(str, 0);\n\t      if (res.status) {\n\t        return [res.value, str.slice(res.index)];\n\t      }\n\t      throw new ParseError(res.expected, str, res.furthest);\n\t    }\n\t  }, {\n\t    key: 'bind',\n\t    value: function bind(boundFun) {\n\t      var _this2 = this;\n\t\n\t      return parser(function (stream, index) {\n\t        var res = _this2.call(stream, index);\n\t        if (res.status) {\n\t          var nextParser = boundFun(res.value);\n\t          return nextParser.call(stream, res.index).aggregate(res);\n\t        }\n\t        return res;\n\t      });\n\t    }\n\t  }, {\n\t    key: 'map',\n\t    value: function map(mapFun) {\n\t      return this.bind(function (res) {\n\t        return success(mapFun(res));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'then',\n\t    value: function then(other) {\n\t      return seq(this, other).map(function (r) {\n\t        return r[1];\n\t      });\n\t    }\n\t  }, {\n\t    key: 'skip',\n\t    value: function skip(other) {\n\t      return seq(this, other).map(function (r) {\n\t        return r[0];\n\t      });\n\t    }\n\t  }, {\n\t    key: 'result',\n\t    value: function result(res) {\n\t      return this.rshift(success(res));\n\t    }\n\t  }, {\n\t    key: 'many',\n\t    value: function many() {\n\t      return this.times(0, Infinity);\n\t    }\n\t  }, {\n\t    key: 'times',\n\t    value: function times(min, max) {\n\t      var _this3 = this;\n\t\n\t      max = max || min;\n\t\n\t      return parser(function (stream, index) {\n\t        var values = [];\n\t        var times = 0;\n\t        var res = void 0;\n\t\n\t        while (times < max) {\n\t          res = _this3.call(stream, index).aggregate(res);\n\t          if (res.status) {\n\t            values.push(res.value);\n\t            index = res.index;\n\t            times += 1;\n\t          } else if (times >= min) {\n\t            break;\n\t          } else {\n\t            return res;\n\t          }\n\t        }\n\t\n\t        return Result.success(index, values).aggregate(res);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'atMost',\n\t    value: function atMost(n) {\n\t      return this.times(0, n);\n\t    }\n\t  }, {\n\t    key: 'atLeast',\n\t    value: function atLeast(n) {\n\t      return this.times(n) + this.many();\n\t    }\n\t  }, {\n\t    key: 'desc',\n\t    value: function desc(_desc) {\n\t      var f = fail(_desc);\n\t      return this.or(f);\n\t    }\n\t  }, {\n\t    key: 'mark',\n\t    value: function mark() {\n\t      var self = this;\n\t      return generate(regeneratorRuntime.mark(function _callee() {\n\t        var start, body, end;\n\t        return regeneratorRuntime.wrap(function _callee$(_context) {\n\t          while (1) {\n\t            switch (_context.prev = _context.next) {\n\t              case 0:\n\t                _context.next = 2;\n\t                return lineInfo;\n\t\n\t              case 2:\n\t                start = _context.sent;\n\t                _context.next = 5;\n\t                return self;\n\t\n\t              case 5:\n\t                body = _context.sent;\n\t                _context.next = 8;\n\t                return lineInfo;\n\t\n\t              case 8:\n\t                end = _context.sent;\n\t                return _context.abrupt('return', [start, body, end]);\n\t\n\t              case 10:\n\t              case 'end':\n\t                return _context.stop();\n\t            }\n\t          }\n\t        }, _callee, this);\n\t      }));\n\t    }\n\t  }, {\n\t    key: 'plus',\n\t    value: function plus(right) {\n\t      return seq(this, right).map(function (res) {\n\t        return res[0] + res[1];\n\t      });\n\t    }\n\t  }, {\n\t    key: 'multiply',\n\t    value: function multiply(right) {\n\t      return this.times(right);\n\t    }\n\t  }, {\n\t    key: 'or',\n\t    value: function or(right) {\n\t      return alt(this, right);\n\t    }\n\t  }, {\n\t    key: 'rshift',\n\t    value: function rshift(right) {\n\t      return this.then(right);\n\t    }\n\t  }, {\n\t    key: 'lshift',\n\t    value: function lshift(right) {\n\t      return this.skip(right);\n\t    }\n\t  }]);\n\t\n\t  return Parser;\n\t}();\n\t\n\tfunction alt() {\n\t  for (var _len = arguments.length, parsers = Array(_len), _key = 0; _key < _len; _key++) {\n\t    parsers[_key] = arguments[_key];\n\t  }\n\t\n\t  if (!parsers) {\n\t    return fail('<Empty alt>');\n\t  }\n\t\n\t  if (parsers[1] === 0) {\n\t    throw Error('Excepted parser got 0!');\n\t  }\n\t\n\t  return parser(function (stream, index) {\n\t    var res = void 0,\n\t        _parser = void 0;\n\t    for (var i = 0, l = parsers.length; i < l; i++) {\n\t      _parser = parsers[i];\n\t      res = _parser.call(stream, index).aggregate(res);\n\t      if (res.status) {\n\t        return res;\n\t      }\n\t    }\n\t    return res;\n\t  });\n\t}\n\t\n\tfunction seq() {\n\t  for (var _len2 = arguments.length, parsers = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t    parsers[_key2] = arguments[_key2];\n\t  }\n\t\n\t  if (!parsers) {\n\t    return success([]);\n\t  }\n\t\n\t  return parser(function (stream, index) {\n\t    var res = void 0;\n\t    var values = [];\n\t    var _parser = void 0;\n\t\n\t    for (var i = 0, l = parsers.length; i < l; i++) {\n\t      _parser = parsers[i];\n\t      res = _parser.call(stream, index).aggregate(res);\n\t      if (!res.status) {\n\t        return res;\n\t      }\n\t      index = res.index;\n\t      values.push(res.value);\n\t    }\n\t    return Result.success(index, values).aggregate(res);\n\t  });\n\t}\n\t\n\tfunction parser(fun) {\n\t  return new Parser(fun);\n\t}\n\t\n\tfunction generate(fun) {\n\t  if (getType(fun) === 'String') {\n\t    return function (f) {\n\t      return generate(f).desc(fun);\n\t    };\n\t  }\n\t\n\t  return parser(function (stream, index) {\n\t    var g = fun();\n\t\n\t    var res = void 0;\n\t    var value = void 0;\n\t    var nextParser = void 0;\n\t\n\t    while (!(nextParser = g.next(value)).done) {\n\t      res = nextParser.value.call(stream, index).aggregate(res);\n\t      if (!res.status) {\n\t        return res;\n\t      }\n\t      value = res.value;\n\t      index = res.index;\n\t    }\n\t\n\t    var returnVal = nextParser.value;\n\t    if (returnVal instanceof Parser) {\n\t      return returnVal(stream, index).aggregate(res);\n\t    }\n\t\n\t    return Result.success(index, returnVal).aggregate(res);\n\t  }).desc(fun.name);\n\t}\n\t\n\tvar index = exports.index = new Parser(function (_, index) {\n\t  return Result.success(index, index);\n\t});\n\tvar lineInfo = exports.lineInfo = new Parser(function (stream, index) {\n\t  return Result.success(index, lineInfoAt(stream, index));\n\t});\n\t\n\tfunction success(val) {\n\t  return new Parser(function (_, index) {\n\t    return Result.success(index, val);\n\t  });\n\t}\n\t\n\tfunction fail(expected) {\n\t  return new Parser(function (_, index) {\n\t    return Result.failure(index, expected);\n\t  });\n\t}\n\t\n\tfunction string(s) {\n\t  var sl = s.length;\n\t\n\t  var stringParser = parser(function (stream, index) {\n\t    if (stream.slice(index, index + sl) === s) {\n\t      return Result.success(index + sl, s);\n\t    } else {\n\t      return Result.failure(index, s);\n\t    }\n\t  });\n\t\n\t  stringParser.name = 'stringParser<' + s + '>';\n\t\n\t  return stringParser;\n\t}\n\t\n\tfunction regex(exp) {\n\t  if (getType(exp) === 'String') {\n\t    exp = new RegExp(exp);\n\t  }\n\t\n\t  var regexParser = parser(function (stream, index) {\n\t    var _stream = stream.slice(index);\n\t    var match = _stream.match(exp);\n\t    // just for debug, xixi\n\t    // console.log(stream, index, exp.toString(), match ? match.index + match[0].length + index : void 0)\n\t    if (match) {\n\t      var _index = match.index + match[0].length + index;\n\t      return Result.success(_index, match[0]);\n\t    }\n\t    return Result.failure(index, exp.toString());\n\t  });\n\t\n\t  regexParser.name = 'regexParser<' + exp.toString() + '>';\n\t\n\t  return regexParser;\n\t}\n\t\n\tvar whitespace = exports.whitespace = regex('\\s+');\n\t\n\tvar letter = exports.letter = parser(function (stream, index) {\n\t  if (index < stream.length && isAlpha(stream[index])) {\n\t    return Result.success(index + 1, stream[index]);\n\t  }\n\t  return Result.failure(index, 'a letter');\n\t});\n\t\n\tvar digit = exports.digit = parser(function (stream, index) {\n\t  if (index < stream.length && !isNaN(-stream[index])) {\n\t    return Result.success(index + 1, stream[index]);\n\t  }\n\t  return Result.failure(index, 'a digit');\n\t});\n\t\n\tvar eof = exports.eof = parser(function (stream, index) {\n\t  if (index >= stream.length) {\n\t    return Result.success(index, void 0);\n\t  }\n\t  return Result.failure(index, 'EOF');\n\t});\n\t\n\tvar or = exports.or = function or(left, right) {\n\t  if (left instanceof Parser) {\n\t    return left.or(right);\n\t  }\n\t  return left | right;\n\t};\n\t\n\tvar plus = exports.plus = function plus(left, right) {\n\t  if (left instanceof Parser) {\n\t    return left.plus(right);\n\t  }\n\t  return left + right;\n\t};\n\t\n\tvar lshift = exports.lshift = function lshift(left, right) {\n\t  if (left instanceof Parser) {\n\t    return left.lshift(right);\n\t  }\n\t  return left << right;\n\t};\n\t\n\tvar rshift = exports.rshift = function rshift(left, right) {\n\t  if (left instanceof Parser) {\n\t    return left.rshift(right);\n\t  }\n\t  return left >> right;\n\t};\n\t\n\tvar bind = exports.bind = function bind(left, right) {\n\t  return left.bind(right);\n\t};\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9e402f951f9da2d96d87","function getType(obj) {\n  return Object.prototype.toString.call(obj).slice(8, -1)\n}\n\nfunction isAlpha(s) {\n  return !/[^a-z\\xDF-\\xFF]|^$/.test(s.toLowerCase())\n}\n\nfunction count(arr, item, start, end) {\n  let c = 0\n  for (var i = 0, l = arr.length; i < Math.min(l, end); i++) {\n    if (arr[i] === item) {\n      c++\n    }\n  }\n  return c\n}\n\nfunction lineInfoAt(stream, index) {\n  if (index > stream.length) {\n    throw Error('invalid index')\n  }\n  let cs = stream.split('')\n  let line = count(cs, '\\n', index)\n  let lastNl = count(cs.reverse(), '\\n', index) || -1\n  let col = index - (lastNl + 1)\n  return [line, col]\n}\n\nclass Result {\n  constructor(status, index, value, furthest, expected) {\n    this.status = status\n    this.index = index\n    this.value = value\n    this.furthest = furthest\n    this.expected = expected\n  }\n\n  static success(index, value) {\n    return new Result(true, index, value, -1, void 0)\n  }\n\n  static failure(index, expected) {\n    return new Result(false, -1, void 0, index, expected)\n  }\n\n  aggregate(other) {\n    if (!other) {\n      return this\n    }\n    if (this.furthest >= other.furthest) {\n      return this\n    }\n    return new Result(\n      this.status, this.index, this.value, other.furthest, other.expected\n    )\n  }\n}\n\nclass ParseError extends Error {\n  constructor(expected, stream, index) {\n    let s = ''\n    try {\n      let [line, col] = lineInfoAt(stream, index)\n      s = `${line}:${col}`\n    } catch(e) {\n      s = 'error'\n    }\n    super(`Expected ${expected} at ${s}`)\n    this.expected = expected\n    this.stream = stream\n    this.index = index\n  }\n}\n\nclass Parser {\n  constructor(func) {\n    this.func = func\n  }\n\n  call(stream, index) {\n    return this.func(stream, index)\n  }\n\n  parse(str) {\n    const res = (this.lshift(eof)).parsePartial(str)\n    return res[0]\n  }\n\n  parsePartial(str) {\n    const t = getType(str)\n    if (t !== 'String') {\n      throw Error(`Only parse string, ${t} found!`)\n    }\n    const res = this.call(str, 0)\n    if (res.status) {\n      return [res.value, str.slice(res.index)]\n    }\n    throw new ParseError(res.expected, str, res.furthest)\n  }\n\n  bind(boundFun) {\n    return parser((stream, index) => {\n      const res = this.call(stream, index)\n      if (res.status) {\n        const nextParser = boundFun(res.value)\n        return nextParser.call(stream, res.index).aggregate(res)\n      }\n      return res\n    })\n  }\n\n  map(mapFun) {\n    return this.bind(res => success(mapFun(res)))\n  }\n\n  then(other) {\n    return seq(this, other).map(r => r[1])\n  }\n\n  skip(other) {\n    return seq(this, other).map(r => r[0])\n  }\n\n  result(res) {\n    return this.rshift(success(res))\n  }\n\n  many() {\n    return this.times(0, Infinity)\n  }\n\n  times(min, max) {\n    max = max || min\n\n    return parser((stream, index) => {\n      let values = []\n      let times = 0\n      let res\n\n      while (times < max) {\n        res = this.call(stream, index).aggregate(res)\n        if (res.status) {\n          values.push(res.value)\n          index = res.index\n          times += 1\n        } else if (times >= min) {\n          break\n        } else {\n          return res\n        }\n      }\n\n      return Result.success(index, values).aggregate(res)\n    })\n  }\n\n  atMost(n) {\n    return this.times(0, n)\n  }\n\n  atLeast(n) {\n    return this.times(n) + this.many()\n  }\n\n  desc(desc) {\n    const f = fail(desc)\n    return this.or(f)\n  }\n\n  mark() {\n    const self = this\n    return generate(function*() {\n      const start = yield lineInfo\n      const body = yield self\n      const end = yield lineInfo\n      return [start, body, end]\n    })\n  }\n\n  plus(right) {\n    return seq(this, right).map(res => res[0] + res[1])\n  }\n\n  multiply(right) {\n    return this.times(right)\n  }\n\n  or(right) {\n    return alt(this, right)\n  }\n\n  rshift(right) {\n    return this.then(right)\n  }\n\n  lshift(right) {\n    return this.skip(right)\n  }\n}\n\nfunction alt(...parsers) {\n  if (!parsers) {\n    return fail('<Empty alt>')\n  }\n\n  if (parsers[1] === 0) {\n    throw Error('Excepted parser got 0!')\n  }\n\n  return parser((stream, index) => {\n    let res, _parser\n    for (var i = 0, l = parsers.length; i < l; i++) {\n      _parser = parsers[i]\n      res = _parser.call(stream, index).aggregate(res)\n      if (res.status) {\n        return res\n      }\n    }\n    return res\n  })\n}\n\nfunction seq(...parsers) {\n  if (!parsers) {\n    return success([])\n  }\n\n  return parser((stream, index) => {\n    let res\n    let values = []\n    let _parser\n\n    for (var i = 0, l = parsers.length; i < l; i++) {\n      _parser = parsers[i]\n      res = _parser.call(stream, index).aggregate(res)\n      if (!res.status) {\n        return res\n      }\n      index = res.index\n      values.push(res.value)\n    }\n    return Result.success(index, values).aggregate(res)\n  })\n}\n\nexport function parser(fun) {\n  return new Parser(fun)\n}\n\nexport function generate(fun) {\n  if (getType(fun) === 'String') {\n    return f => generate(f).desc(fun)\n  }\n\n  return parser((stream, index) => {\n    const g = fun()\n\n    let res\n    let value\n    let nextParser\n\n    while (!(nextParser = g.next(value)).done) {\n      res = nextParser.value.call(stream, index).aggregate(res)\n      if (!res.status) {\n        return res\n      }\n      value = res.value\n      index = res.index\n    }\n\n    const returnVal = nextParser.value\n    if (returnVal instanceof Parser) {\n      return returnVal(stream, index).aggregate(res)\n    }\n\n    return Result.success(index, returnVal).aggregate(res)\n\n  }).desc(fun.name)\n}\n\nexport const index = new Parser((_, index) => Result.success(index, index))\nexport const lineInfo = new Parser((stream, index) => Result.success(index, lineInfoAt(stream, index)))\n\nfunction success(val) {\n  return new Parser((_, index) => Result.success(index, val))\n}\n\nfunction fail(expected) {\n  return new Parser((_, index) => Result.failure(index, expected))\n}\n\nexport function string(s) {\n  const sl = s.length\n\n  const stringParser = parser((stream, index) => {\n    if (stream.slice(index, index + sl) === s) {\n      return Result.success(index + sl, s)\n    } else {\n      return Result.failure(index, s)\n    }\n  })\n\n  stringParser.name = `stringParser<${s}>`\n\n  return stringParser\n}\n\nexport function regex(exp) {\n  if (getType(exp) === 'String') {\n    exp = new RegExp(exp)\n  }\n\n  const regexParser = parser((stream, index) => {\n    const _stream = stream.slice(index)\n    const match = _stream.match(exp)\n    // just for debug, xixi\n    // console.log(stream, index, exp.toString(), match ? match.index + match[0].length + index : void 0)\n    if (match) {\n      const _index = match.index + match[0].length + index\n      return Result.success(_index, match[0])\n    }\n    return Result.failure(index, exp.toString())\n  })\n\n  regexParser.name = `regexParser<${exp.toString()}>`\n\n  return regexParser\n}\n\nexport const whitespace = regex('\\s+')\n\nexport const letter = parser((stream, index) => {\n  if (index < stream.length && isAlpha(stream[index])) {\n    return Result.success(index + 1, stream[index])\n  }\n  return Result.failure(index, 'a letter')\n})\n\nexport const digit = parser((stream, index) => {\n  if (index < stream.length && !isNaN(-stream[index])) {\n    return Result.success(index + 1, stream[index])\n  }\n  return Result.failure(index, 'a digit')\n})\n\nexport const eof = parser((stream, index) => {\n  if (index >= stream.length) {\n    return Result.success(index, void 0)\n  }\n  return Result.failure(index, 'EOF')\n});\n\nexport const or = (left, right) => {\n  if (left instanceof Parser) {\n    return left.or(right)\n  }\n  return left | right\n}\n\nexport const plus = (left, right) => {\n  if (left instanceof Parser) {\n    return left.plus(right)\n  }\n  return left + right\n}\n\nexport const lshift = (left, right) => {\n  if (left instanceof Parser) {\n    return left.lshift(right)\n  }\n  return left << right\n}\n\nexport const rshift = (left, right) => {\n  if (left instanceof Parser) {\n    return left.rshift(right)\n  }\n  return left >> right\n}\n\nexport const bind = (left, right) => left.bind(right)\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js"],"sourceRoot":""}